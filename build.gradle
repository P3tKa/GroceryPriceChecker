plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
}

tasks.named('bootJar') {
	enabled = false
}

allprojects {
	group = 'dev.petkevicius'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'checkstyle'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(23)
		}
	}

	checkstyle {
		configFile = file("${rootProject.projectDir}/config/checkstyle/checks.xml")
		ignoreFailures = false
		toolVersion = "10.21.2"
		maxWarnings = 0
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		// Compile Only
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		// Development Only
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

		// Implementation
		implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
			exclude group: 'org.hibernate', module: 'hibernate-core'
		}
		implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'
		implementation "org.flywaydb:flyway-core"
		implementation "org.flywaydb:flyway-database-postgresql"
		implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'io.github.wimdeblauwe:htmx-spring-boot:4.0.1'

		// Runtime Only
		runtimeOnly 'org.postgresql:postgresql'

		// Test Implementation
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testImplementation 'org.springframework.boot:spring-boot-testcontainers'
		testImplementation 'org.testcontainers:junit-jupiter'
		testImplementation 'org.testcontainers:postgresql'

		// Test Runtime Only
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}

	test {
		useJUnitPlatform()
	}
}
