plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'gg.jte.gradle' version '3.1.12'
	id "com.github.node-gradle.node" version "7.1.0"
}

group = 'lt.p3tka'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude group: 'org.hibernate', module: 'hibernate-core'
	}
	implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'gg.jte:jte:3.1.12'
	implementation 'gg.jte:jte-spring-boot-starter-3:3.1.12'
	implementation 'io.github.wimdeblauwe:htmx-spring-boot:4.0.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jte {
	generate()
	binaryStaticContent = true
}

tasks.named('test') {
	useJUnitPlatform()
}
